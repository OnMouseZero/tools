C:\Users\liudong\Documents\Tencent Files\295136176

#clash启动没有mmdb，需要手动下载
https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb

#备份数据库，或者数据表
--skip-set-charset  或者  --default-character-set=utf8mb4
docker exec mysql  sh -c 'exec mysqldump  --skip-set-charset --all-databases -uroot -p123456 --all-databases' > /var/backup/music_`date +%F`.sql
docker exec mysql  sh -c 'exec mysqldump  --skip-set-charset // --default-character-set=utf8mb4  -uroot -p123456 redb' > /var/backup/music_`date +%F`.sql
docker exec mysql  sh -c 'exec mysqldump  --skip-set-charset  // --default-character-set=utf8mb4  --no-data -uroot -p123456 cdhr_platform_bmc_equ_author   datax_sync_time_record' > datax_sync_time_record.sql

#导入SQL文件
docker exec  mysql  mysql -uroot -p111111  -e "source xxxxx.sql"   database_name  #进入容器导入
docker exec -i  mysql  mysql -uroot -p111111  -t 450000_rmdsd  < ./rmdsd_mysql.sql  #不进容器导入

###PG数据库导入sql文件
psql  -h  127.0.0.1  -U  postgres  -d postgres  -f  /xxxxxxx.sql

#清空表数据，保留表结构，释放表空间
truncate table  table_name

docker ps -a --format "table {{.Image}}\t{{.ID}}\t{{.Ports}}\t{{.Status}}"   
docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)

find /backup/ -mtime +1 -name "*.sql" -delete

rsync -avP --progress  --exclude "DS_STORE/"  /media/tx-deepocean/Data/DICOMS/  root@${SERVER_IP}:/media/tx-deepocean/Data/DICOMS/

#定时同步数据
30 20 * * * /home/tx-deepoean/Rsync/rsync.sh
0  06 * * * pkill rsync
* * * * * docker start $(docker ps -aq) 2>&1 >> /tmp/docker_start.log


git config --global credential.helper store

sed -i  's/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/10.0.0.1/g'  
sed -E -i  's/([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+):801\b/192.168.9.9:801/g'

sed -i   's/\r$//'   yourfile.txt    #去掉换行符
sed -i   's/^[ \t]*//;s/[ \t]*$//'    yourfile.txt     #去掉空格


find ./ -maxdepth 3 -type f \( -name "config.js" -o -name "config.json" -o -name "myconfig.json" \)

测试写入速度
sudo dd if=/dev/zero    of=目标磁盘路径 bs=1G count=1         oflag=direct
sudo dd if=/dev/zero    of=目标磁盘路径 bs=4M count=1024   oflag=direct
测试读取速度
sudo dd if=目标磁盘路径  of=/dev/null bs=1G count=1         iflag=direct
sudo dd if=目标磁盘路径  of=/dev/null bs=4M count=1024   iflag=direct


#加压解压查看进度条
tar -zcf  -  ldong_master  | pv -s $(du -sb ldong_master  | awk '{print $1}') | gzip > ldong_master.tar.gz
tar -zxf    file.tar.gz | pv -l -s $(du -sb file.tar.gz | awk '{print $1}') | tar -zxf - -C /destination/folder

##释放缓存
sync
echo 1 > /proc/sys/vm/drop_caches


sudo systemctl daemon-reload

TX容器的版本：dev、vendor，stable、tools

######mysql迁移数据报错字符集报错不相等，需要修改字符集
ALTER TABLE RMBT_STORAGE_DATA_INDEX_202401  convert to  CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

#mysql时间转换
from_unixtime(left(endtime, 10), "%Y-%m-%d %H:%m:%s")
unix_timestamp(created_at)
date_format(endtime,  "'%Y-%m")     等等格式

#redis数据使用python格式化输出
import json
redis_value =  “xxxxxx”
data = json.loads(redis_value)
redis_json = json.dumps(data, ensure_ascii=False, indent=4)
print(redis_json)

#mysql修改a表的字段值为b的某个字段
update  a  inner join b on a.mfid = b.mfid  set  a.name = b.fname

























